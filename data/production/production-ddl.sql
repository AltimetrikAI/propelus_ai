-- ============================================================================
-- PRODUCTION DDL - Aurora PostgreSQL (PRODUCTION-READY)
-- ============================================================================
-- Database: taxonomy
-- Schema: taxonomy_schema
-- Extensions: pg_trgm, pgcrypto
-- Status: Production-ready with all migrations (001-026) applied
-- Includes:
--   - confidence column in silver_mapping_taxonomies
--   - customer_id as VARCHAR(255) for subsystem identifiers
--   - description field in silver_taxonomies
-- Date: January 21, 2025
-- ============================================================================

-- Generated DDL with auto-increment identities (Aurora PostgreSQL)
CREATE EXTENSION IF NOT EXISTS pg_trgm;
CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- TABLE: silver_taxonomies
CREATE TABLE IF NOT EXISTS silver_taxonomies (
    taxonomy_id BIGINT,
    customer_id VARCHAR(255),
    name VARCHAR(200),
    description TEXT,
    type VARCHAR(10),
    status VARCHAR(10),
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    load_id BIGINT,
    PRIMARY KEY (taxonomy_id),
    UNIQUE(taxonomy_id,customer_id),
    CHECK (status IN ('active','inactive')),
    CHECK (type IN ('master','customer'))
);

-- TABLE: bronze_load_details
CREATE TABLE IF NOT EXISTS bronze_load_details (
    load_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    customer_id VARCHAR(255),
    taxonomy_id BIGINT,
    load_details JSONB,
    load_date TIMESTAMPTZ,
    load_start TIMESTAMPTZ,
    load_end TIMESTAMPTZ,
    load_status VARCHAR(10),
    load_active_flag BOOLEAN,
    load_type VARCHAR(10),
    taxonomy_type  VARCHAR(10),
    PRIMARY KEY (load_id),
    FOREIGN KEY (customer_id, taxonomy_id) REFERENCES silver_taxonomies(customer_id, taxonomy_id),
    CHECK (load_type IN ('new','updated')),
    CHECK (taxonomy_type IN ('master','customer')),
    CHECK (load_status IN ('in progress','completed','failed'))
);

-- TABLE: bronze_taxonomies
CREATE TABLE IF NOT EXISTS bronze_taxonomies (
    row_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    load_id BIGINT,
    customer_id VARCHAR(255),
    taxonomy_id BIGINT,
    row_json JSONB,
    row_load_status VARCHAR(10),
    row_active_flag BOOLEAN,
    PRIMARY KEY (row_id),
    FOREIGN KEY (load_id) REFERENCES bronze_load_details(load_id),
    FOREIGN KEY (customer_id, taxonomy_id) REFERENCES silver_taxonomies(customer_id, taxonomy_id),
    CHECK (row_load_status IN ('in progress','completed','failed'))
);

-- TABLE: silver_taxonomies_log
CREATE TABLE IF NOT EXISTS silver_taxonomies_log (
    taxonomy_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (taxonomy_id) REFERENCES silver_taxonomies(taxonomy_id),
     CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_taxonomies_nodes_types
CREATE TABLE IF NOT EXISTS silver_taxonomies_nodes_types (
    node_type_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(200),
    status VARCHAR(10),
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    load_id BIGINT,
    PRIMARY KEY(node_type_id),
    FOREIGN KEY (load_id) REFERENCES bronze_load_details(load_id),
    CHECK (status IN ('active','inactive'))
);

-- TABLE: silver_taxonomies_nodes
CREATE TABLE IF NOT EXISTS silver_taxonomies_nodes (
    node_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    node_type_id BIGINT,
    taxonomy_id BIGINT,
    parent_node_id BIGINT,
    value VARCHAR(1000),
    profession VARCHAR(1000),
    level INTEGER,
    status VARCHAR(10),
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    load_id BIGINT,
    row_id BIGINT,
    PRIMARY KEY (node_id),
    CHECK (status IN ('active','inactive')),
    CHECK (level >= 0),
    FOREIGN KEY (node_type_id) REFERENCES silver_taxonomies_nodes_types(node_type_id),
    FOREIGN KEY (taxonomy_id) REFERENCES silver_taxonomies(taxonomy_id),
    FOREIGN KEY (parent_node_id) REFERENCES silver_taxonomies_nodes(node_id),
    FOREIGN KEY (load_id) REFERENCES bronze_load_details(load_id),
    FOREIGN KEY (row_id) REFERENCES bronze_taxonomies(row_id)
);

-- TABLE: silver_taxonomies_nodes_log
CREATE TABLE IF NOT EXISTS silver_taxonomies_nodes_log (
    node_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (node_id) REFERENCES silver_taxonomies_nodes(node_id),
     CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_taxonomies_nodes_types_log
CREATE TABLE IF NOT EXISTS silver_taxonomies_nodes_types_log (
    node_type_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (node_type_id) REFERENCES silver_taxonomies_nodes_types(node_type_id),
     CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_mapping_taxonomies_rules
CREATE TABLE IF NOT EXISTS silver_mapping_taxonomies_rules (
    mapping_rule_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(1000),
    enabled BOOLEAN,
    pattern VARCHAR(2000),
    attributes VARCHAR(500),
    flags VARCHAR(500),
    action VARCHAR(500),
    command VARCHAR(100),
    AI_mapping_flag BOOLEAN,
    Human_mapping_flag BOOLEAN,
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    PRIMARY KEY (mapping_rule_id),
    UNIQUE(name)
);

-- TABLE: silver_mapping_taxonomies_rules_log
CREATE TABLE IF NOT EXISTS silver_mapping_taxonomies_rules_log (
    mapping_rule_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (mapping_rule_id) REFERENCES silver_mapping_taxonomies_rules(mapping_rule_id),
    CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_mapping_taxonomies_rules_assigment
CREATE TABLE IF NOT EXISTS silver_mapping_taxonomies_rules_assigment (
    mapping_rule_assigment_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    mapping_rule_id BIGINT,
    master_node_type_id BIGINT,
    child_node_type_id BIGINT,
    priority INTEGER,
    enabled BOOLEAN,
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    PRIMARY KEY (mapping_rule_assigment_id),
    CHECK (priority >= 1),
    FOREIGN KEY (mapping_rule_id) REFERENCES silver_mapping_taxonomies_rules(mapping_rule_id),
    FOREIGN KEY (master_node_type_id) REFERENCES silver_taxonomies_nodes_types(node_type_id),
    FOREIGN KEY (child_node_type_id) REFERENCES silver_taxonomies_nodes_types(node_type_id)
);

-- TABLE: silver_mapping_rules_assigment_log
CREATE TABLE IF NOT EXISTS silver_mapping_rules_assigment_log (
    mapping_rule_assigment_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (mapping_rule_assigment_id) REFERENCES silver_mapping_taxonomies_rules_assigment(mapping_rule_assigment_id),
    CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_mapping_taxonomies (Updated from data engineer + confidence column)
CREATE TABLE IF NOT EXISTS silver_mapping_taxonomies (
    mapping_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    mapping_rule_id BIGINT,
    master_node_id BIGINT,
    child_node_id BIGINT,
    confidence NUMERIC(5,2) DEFAULT 100.00,
    status VARCHAR(10),
    "user" VARCHAR(255) ,
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    PRIMARY KEY (mapping_id),
    CHECK (status IN ('active','inactive')),
    CHECK (confidence >= 0 AND confidence <= 100),
    FOREIGN KEY (mapping_rule_id) REFERENCES silver_mapping_taxonomies_rules(mapping_rule_id),
    FOREIGN KEY (master_node_id) REFERENCES silver_taxonomies_nodes(node_id),
    FOREIGN KEY (child_node_id) REFERENCES silver_taxonomies_nodes(node_id)
);

-- TABLE: gold_mapping_taxonomies
CREATE TABLE IF NOT EXISTS gold_mapping_taxonomies (
    mapping_id BIGINT,
    master_node_id BIGINT,
    child_node_id BIGINT,
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    UNIQUE(mapping_id),
    FOREIGN KEY (mapping_id) REFERENCES silver_mapping_taxonomies(mapping_id),
    FOREIGN KEY (master_node_id) REFERENCES silver_taxonomies_nodes(node_id),
    FOREIGN KEY (child_node_id) REFERENCES silver_taxonomies_nodes(node_id)
);

-- TABLE: gold_mapping_taxonomies_log
CREATE TABLE IF NOT EXISTS gold_mapping_taxonomies_log (
    mapping_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (mapping_id) REFERENCES gold_mapping_taxonomies(mapping_id),
    CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_taxonomies_attribute_types
CREATE TABLE IF NOT EXISTS silver_taxonomies_attribute_types (
    attribute_type_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(200),
    status VARCHAR(10),
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    load_id BIGINT,
    PRIMARY KEY (attribute_type_id),
    FOREIGN KEY (load_id) REFERENCES bronze_load_details(load_id),
    CHECK (status IN ('active','inactive'))
);

-- TABLE: silver_taxonomies_nodes_attributes
CREATE TABLE IF NOT EXISTS silver_taxonomies_nodes_attributes (
    node_attribute_type_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    attribute_type_id BIGINT,
    node_id BIGINT,
    value VARCHAR(1000),
    status VARCHAR(10),
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    load_id BIGINT,
    row_id BIGINT,
    PRIMARY KEY (node_attribute_type_id),
    FOREIGN KEY (attribute_type_id) REFERENCES silver_taxonomies_attribute_types(attribute_type_id),
    FOREIGN KEY (node_id) REFERENCES silver_taxonomies_nodes(node_id),
    FOREIGN KEY (load_id) REFERENCES bronze_load_details(load_id),
    FOREIGN KEY (row_id) REFERENCES bronze_taxonomies(row_id),
    CHECK (status IN ('active','inactive'))
);

-- TABLE: silver_taxonomies_nodes_attributes_log
CREATE TABLE IF NOT EXISTS silver_taxonomies_nodes_attributes_log (
    node_attribute_type_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (node_attribute_type_id) REFERENCES silver_taxonomies_nodes_attributes(node_attribute_type_id),
    CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_taxonomies_attribute_types_log
CREATE TABLE IF NOT EXISTS silver_taxonomies_attribute_types_log (
    attribute_type_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (attribute_type_id) REFERENCES silver_taxonomies_attribute_types(attribute_type_id),
    CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_taxonomies_versions
CREATE TABLE IF NOT EXISTS silver_taxonomies_versions (
    taxonomy_version_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    taxonomy_id BIGINT,
    taxonomy_version_number INTEGER,
    change_type VARCHAR(255),
    affected_nodes JSONB,
    affected_attributes JSONB,
    remapping_flag BOOLEAN,
    remapping_reason TEXT,
    total_mappings_processed INTEGER,
    total_mappings_changed INTEGER,
    total_mappings_unchanged INTEGER,
    total_mappings_failed INTEGER,
    total_mappings_new INTEGER,
    remapping_proces_status VARCHAR(10),
    version_notes TEXT,
    version_from_date TIMESTAMPTZ,
    version_to_date TIMESTAMPTZ,
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    load_id BIGINT,
    PRIMARY KEY (taxonomy_version_id),
    FOREIGN KEY (taxonomy_id) REFERENCES silver_taxonomies(taxonomy_id),
    FOREIGN KEY (load_id) REFERENCES bronze_load_details(load_id)
);

CREATE TABLE IF NOT EXISTS silver_taxonomies_versions_log (
    taxonomy_version_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (taxonomy_version_id) REFERENCES silver_taxonomies_versions(taxonomy_version_id),
    CHECK (operation_type IN ('insert','update','delete'))
);

-- TABLE: silver_mapping_taxonomies_versions
CREATE TABLE IF NOT EXISTS silver_mapping_taxonomies_versions (
    mapping_version_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    mapping_id BIGINT,
    mapping_version_number INTEGER,
    version_from_date TIMESTAMPTZ,
    version_to_date TIMESTAMPTZ,
    superseded_by_mapping_id BIGINT,
    superseded_at TIMESTAMPTZ,
    created_at TIMESTAMPTZ,
    last_updated_at TIMESTAMPTZ,
    PRIMARY KEY (mapping_version_id),
    FOREIGN KEY (mapping_id) REFERENCES silver_mapping_taxonomies(mapping_id),
    FOREIGN KEY (superseded_by_mapping_id) REFERENCES silver_mapping_taxonomies(mapping_id)
);

CREATE TABLE IF NOT EXISTS silver_mapping_taxonomies_versions_log (
    mapping_version_id BIGINT,
    old_row JSONB,
    new_row JSONB,
    operation_type VARCHAR(10),
    operation_date TIMESTAMPTZ,
    "user" VARCHAR(255),
    FOREIGN KEY (mapping_version_id) REFERENCES silver_mapping_taxonomies_versions(mapping_version_id),
    CHECK (operation_type IN ('insert','update','delete'))
);
